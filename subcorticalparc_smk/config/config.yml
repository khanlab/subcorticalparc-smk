bids_dir = "/path/to/bids/dir"
output_dir = "/path/to/output/dir" # don't use "."

snakebids_dir: "." # DO NOT MODIFY - used to refer to files need by workflow running with CLI

debug: False # Enable printing of debug statements during parsing -- disable if generating dag visualizations

derivatives: False # Search in bids/derivatives if True; can also be path(s) to derivatives datasets

# List of analysis levels in bids app
analysis_levels: &analysis_levels
  - participant
  - participant_struct
  - participant_func

# Mapping from analysis_level to set of target rules or files
targets_by_analysis_level:
  participant:
    - "all" # if "", then the first rule is run
  participant_struct:
    - "diffparc"
  participant_func:
    - "funcparc"

# this configures the pybids grabber - create an entry for each type of input you want to grab
# indexed by name of input dictionary for each input is passed directly to pybids get()
# https://bids-standard.github.io/pybids/generated/bids.layout.BIDSLayout.html#bids.layout.BIDSLayout.get
pybids_inputs:
  T1w:
    filters:
      suffix: "T1w"
      extension: ".nii.gz"
      datatype: "anat"
    wildcards:
      - subject

#--- core BIDS-app options --- (do not modify below) ---#
  bids_dir:
    help: The directory with the input dataset formatted according to the
          BIDS standard.

  output_dir:
    help: The directory where the output files should be stored. If you are
          running group level analysis, this folder should be prepopulated
          with the results of the participant level analysis.

  analysis_level:
    help: Level of the analysis that will be performed
    choices: *analysis_levels

  --participant_label:
    help: The label(s) of the participant(s) that should be analyzed. The label
          corresponds to sub-<participant_label> from the BIDS spec (so it does
          not include "sub-"). If this parameter is not provided, all subjects
          will be analyzed. Multiple participants can be specified with a space
          seperated list.
    nargs: "+"

  --exclude_participant_label:
    help: The label(s) of the participant(s) that should be excluded. The label
          corresponds to sub-<participant_label> from the BIDS spec (so it does
          not include "sub-"). If this parameter is not provided, all subjects
          will be analyzed. Multiple participants can be specified with a space
          sepearated list.
    nargs: "+"
#-----------------------------------------------------#

# Workflow specific config
# participants_tsv: 'config/participants/hcp7T_participants.tsv'
# participants_tsv: 'config/participants/hcptest_participants.tsv' # Test participants

# Singularity containers
singularity:
  neuroglia: /project/6050199/akhanf/singularity/bids-apps/khanlab_neuroglia-core_latest.sif
  freesurfer: /project/6050199/akhanf/singularity/bids-apps/khanlab_freesurfer_v6.0.1-subfields.img
  ciftify: /project/6050199/akhanf/singularity/bids-apps/tigrlab_fmriprep_ciftify_v1.3.2-2.3.3.sif
  connectome_workbench: /project/6050199/akhanf/singularity/bids-apps/khanlab_connectome-workbench_latest.sif
  fsl_cuda: /project/6050199/akhanf/singularity/bids-apps/fsl_6.0.3_cuda9.1.sif
  pythondeps: /project/6050199/tkai/singularity/pythondeps-zonaconn_0.1.1.sif

# Freesurfer license:
fs_license: /project/6050199/akhanf/opt/freesurfer/.license

##### INPUT PATHS / VARIABLES #####
# Subject freesurfer directory (with surf/ and mri/ subdirectories)
# Uses subject wildcard
freesurfer:
  tar: /project/6050199/ext-data/hcp1200/HCP_1200_T1w_Diffusion_FS/{subject}/T1w/{subject}.freesurfer.tar

hcp_func:
  dir: /project/6050199/ext-data/hcp1200/zipfiles
  packages: 
    - 7T_REST_1.6mm_preproc
    - 7T_REST_preproc_extended
    - 3T_Structural_1.6mm_preproc
    - 7T_REST_fixextended
  icafix_package_dict:
    '{subject}/MNINonLinear/Results/rfMRI_REST1_7T_PA/rfMRI_REST1_7T_PA_hp2000_clean.nii.gz': 7T_REST_fixextended
    '{subject}/MNINonLinear/Results/rfMRI_REST2_7T_AP/rfMRI_REST2_7T_AP_hp2000_clean.nii.gz': 7T_REST_fixextended
    '{subject}/MNINonLinear/Results/rfMRI_REST3_7T_PA/rfMRI_REST3_7T_PA_hp2000_clean.nii.gz': 7T_REST_fixextended
    '{subject}/MNINonLinear/Results/rfMRI_REST4_7T_AP/rfMRI_REST4_7T_AP_hp2000_clean.nii.gz': 7T_REST_fixextended
    '{subject}/MNINonLinear/Results/rfMRI_REST1_7T_PA/rfMRI_REST1_7T_PA_Atlas_1.6mm_MSMAll_hp2000_clean.dtseries.nii': 7T_REST_1.6mm_fix
    '{subject}/MNINonLinear/Results/rfMRI_REST2_7T_AP/rfMRI_REST2_7T_AP_Atlas_1.6mm_MSMAll_hp2000_clean.dtseries.nii': 7T_REST_1.6mm_fix
    '{subject}/MNINonLinear/Results/rfMRI_REST3_7T_PA/rfMRI_REST3_7T_PA_Atlas_1.6mm_MSMAll_hp2000_clean.dtseries.nii': 7T_REST_1.6mm_fix
    '{subject}/MNINonLinear/Results/rfMRI_REST4_7T_AP/rfMRI_REST4_7T_AP_Atlas_1.6mm_MSMAll_hp2000_clean.dtseries.nii': 7T_REST_1.6mm_fix
    '{subject}/MNINonLinear/Results/rfMRI_REST1_7T_PA/Movement_Regressors_dt.txt': 7T_REST_1.6mm_preproc
    '{subject}/MNINonLinear/Results/rfMRI_REST2_7T_AP/Movement_Regressors_dt.txt': 7T_REST_1.6mm_preproc 
    '{subject}/MNINonLinear/Results/rfMRI_REST3_7T_PA/Movement_Regressors_dt.txt': 7T_REST_1.6mm_preproc
    '{subject}/MNINonLinear/Results/rfMRI_REST4_7T_AP/Movement_Regressors_dt.txt': 7T_REST_1.6mm_preproc 
    '{subject}/MNINonLinear/ROIs/Atlas_wmparc.1.60.nii.gz': 3T_Structural_1.6mm_preproc
    '{subject}/MNINonLinear/T1w_restore.1.60.nii.gz': 3T_Structural_1.6mm_preproc
    '{subject}/MNINonLinear/xfms/acpc_dc2standard.nii.gz': 3T_Structural_preproc
    '{subject}/MNINonLinear/T1w.nii.gz': 3T_Structural_preproc
    '{subject}/T1w/T1w_acpc_dc.nii.gz': 3T_Structural_preproc
  runs:
    - rfMRI_REST1_7T_PA
    - rfMRI_REST2_7T_AP
    - rfMRI_REST3_7T_PA
    - rfMRI_REST4_7T_AP
  sigma: 1.6
  voxel_size: 1p6mm

# Ciftify cleaning
ciftify-clean:
  hcp: 'resources/funcparc/ciftify_cleaning_wmcsf.json'
  general: 'resources/funcparc/ciftify_cleaning.json'

# Template
template: MNI152NLin6Asym

# Transforms
transforms:
  ants_invwarp: /project/6050199/ext-data/hcp1200/deriv/greedy_template_hcp_UR100_1mm_T1T2GMWM_compositewarps/results/composite/sub-{subject}_to-{template}_via-cohort_CompositeInverseWarp.nii.gz
  ants_warp: /project/6050199/ext-data/hcp1200/deriv/greedy_template_hcp_UR100_1mm_T1T2GMWM_compositewarps/results/composite/sub-{subject}_to-{template}_via-cohort_CompositeWarp.nii.gz
  ants_ref: /project/6050199/ext-data/hcp1200/deriv/greedy_template_hcp_UR100_1mm_T1T2GMWM_compositewarps/resources/templateflow/tpl-{template}/tpl-{template}_res-04_desc-brain_T1w.nii.gz

# Segmentation threshold
prob_seg_threshold: 0.5

# Seed segmentations
seed:
  dir: /scratch/tkai/zona/misc/zona_parcellations/MNI152NLin6Asym
  nii: sub-SNSX32NLin2020Asym_space-MNI152NLin6Asym_hemi-{hemi}_desc-{seed}_prob.nii.gz
  structures:
    ZIR: ZIR

# Target segmentations
target:
  cortical:
    tsv: resources/label-hcpmmp180_dseg.tsv
    atlas: hcpmmp180 # must be [a-zA-Z0-9]+

# Bedpost params
bedpost:
  dir: /project/6050199/ext-data/hcp1200/HCP_1200_T1w_Diffusion_FS
  samples: '{subject}/T1w/Diffusion_7T.bedpostX/mean_S0samples.nii.gz'
  merged_prefix: '{subject}/T1w/Diffusion_7T.bedpostX/merged'
  ref: '{subject}/T1w/T1w_acpc_dc_restore_brain.nii.gz'

# Max no. of clusters (will perform with k=range(2,max_k+1))
max_k: 8

# Tractography parameters
probtrack:
    seed_resolution: 1.0
    res_name: dwi # bids deriv filename will have res-{res_name}
    nsamples: 10000
    opts: '--loopcheck --onewaycondition --cthr=0.2 --nsteps=2000 --steplength=0.5  --fibthresh=0.01 --distthresh=0.0 --sampvox=0.0 --forcedir --opd --os2t --randfib=2' 

probtrack_tractmap:
    seed_resolution: 0.5
    res_name: super #bids deriv filename will have res-{res_name}
    nsamples: 1000
    opts: '--loopcheck --onewaycondition --cthr=0.2 --nsteps=2000 --steplength=0.5  --fibthresh=0.01 --distthresh=0.0 --sampvox=0.0 --forcedir --opd --randfib=2' 
