import pandas as pd
from os.path import join


configfile: "config/config.yml"


# Load participants.tsv and strip off 'sub-'
df = pd.read_table(config["participants_tsv"])
subjects = df["participant_id"].str.strip("sub-").to_list()

# Get list of ROIs
df_targets = pd.read_table(config["target"]["cortical"]["tsv"])
targets = df_targets.name.to_list()

# Get seeds, as structure keys
seeds = config["seed"]["structures"].keys()

# Hemis
hemis = ["L", "R"]


# bids-naming for subject and template (only alphanumeric characters)
wildcard_constraints:
    subject="[a-zA-Z0-9]+",
    template="[a-zA-Z0-9]+",
    seed="[a-zA-Z0-9]+",
    k="[0-9]+",


template = config["template"]


include: "rules/common.smk"


rule all_diffparc:
    input:
        # group_tractseg=expand(
        #     bids(
        #         root="results/tractmap",
        #         template="{template}",
        #         hemi="{hemi}",
        #         label="{seed}",
        #         method="spectralcosine",
        #         k="{k}",
        #         desc="avgtractmap",
        #         suffix="dseg.nii.gz",
        #     ),
        #     template=config["template"],
        #     seed=seeds,
        #     hemi=hemis,
        #     k=range(2, config["max_k"] + 1),
        # ),
        # Input below would result in same as --omit-from resample_clus_seed
        cluster_k=expand(
            bids(
                root="results/tractmap",
                subject="{subject}",
                space="individual",
                hemi="{hemi}",
                label="{seed}",
                method="spectralcosine",
                k="{k}",
                from_="{template}",
                desc="sorted",
                suffix="dseg.nii.gz",
            ),
            subject=subjects,
            template=template,
            seed=seeds,
            hemi=hemis,
            k=range(2, config["max_k"] + 1),
        ),


include: "rules/hcp_mmp.smk"
include: "rules/diffparc.smk"
include: "rules/tractmap.smk"
